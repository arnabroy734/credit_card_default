[2023-07-24 22:11:28,102] INFO Starting of training decision tree]
[2023-07-24 22:12:12,108] INFO Test f1 - 0.4887516541685047]
[2023-07-24 22:12:12,108] INFO Test precision - 0.5699588477366255]
[2023-07-24 22:12:12,108] INFO Test recall - 0.4277992277992278]
[2023-07-24 22:12:12,108] INFO Test auc - 0.6694787849941941

]
[2023-07-24 22:17:23,273] INFO Starting of training decision tree]
[2023-07-24 22:17:35,825] INFO Test f1 - 0.4887516541685047]
[2023-07-24 22:17:35,826] INFO Test precision - 0.5699588477366255]
[2023-07-24 22:17:35,826] INFO Test recall - 0.4277992277992278]
[2023-07-24 22:17:35,826] INFO Test auc - 0.6694787849941941

]
[2023-07-24 22:24:06,864] INFO Starting of training logistic regression]
[2023-07-24 22:24:09,772] INFO Test f1 - 0.5331236485158246]
[2023-07-24 22:24:09,772] INFO Test precision - 0.5430516619943933]
[2023-07-24 22:24:09,772] INFO Test recall - 0.5235521235521235]
[2023-07-24 22:24:09,772] INFO Test auc - 0.7011490692149566

]
[2023-07-24 22:25:08,228] INFO Starting of training logistic regression]
[2023-07-24 22:25:10,963] INFO Test f1 - 0.5331236485158246]
[2023-07-24 22:25:10,963] INFO Test precision - 0.5430516619943933]
[2023-07-24 22:25:10,963] INFO Test recall - 0.5235521235521235]
[2023-07-24 22:25:10,963] INFO Test auc - 0.7011490692149566]
[2023-07-24 22:25:10,967] INFO Best model - Pipeline(steps=[('smote', SMOTE(random_state=42, sampling_strategy='minority')),
                ('standardscaler', StandardScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.1, random_state=100))])

]
[2023-07-24 22:25:48,866] INFO Starting of training decision tree]
[2023-07-24 22:26:00,841] INFO Test f1 - 0.4887516541685047]
[2023-07-24 22:26:00,841] INFO Test precision - 0.5699588477366255]
[2023-07-24 22:26:00,841] INFO Test recall - 0.4277992277992278]
[2023-07-24 22:26:00,841] INFO Test auc - 0.6694787849941941]
[2023-07-24 22:26:00,844] INFO Best model - Pipeline(steps=[('smote', SMOTE(random_state=42, sampling_strategy='minority')),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=10, random_state=100,
                                        splitter='random'))])

]
[2023-07-24 22:30:57,975] INFO Starting of training random forest]
[2023-07-24 22:38:09,153] INFO Starting of training random forest]
[2023-07-24 22:52:46,536] INFO Test f1 - 0.4986301369863014]
[2023-07-24 22:52:46,536] INFO Test precision - 0.6100558659217877]
[2023-07-24 22:52:46,537] INFO Test recall - 0.42162162162162165]
[2023-07-24 22:52:46,537] INFO Test auc - 0.6737226067725537]
[2023-07-24 22:52:46,540] INFO Best model - Pipeline(steps=[('smote', SMOTE(random_state=42, sampling_strategy='minority')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.6, max_samples=0.1,
                                        n_estimators=200, n_jobs=-1,
                                        random_state=100))])

]
[2023-07-24 22:55:53,856] INFO Starting of training logistic regression]
[2023-07-24 22:56:02,740] INFO Test f1 - 0.5351724137931034]
[2023-07-24 22:56:02,740] INFO Test precision - 0.5464788732394367]
[2023-07-24 22:56:02,740] INFO Test recall - 0.5243243243243243]
[2023-07-24 22:56:02,740] INFO Test auc - 0.7022790590803343]
[2023-07-24 22:56:02,743] INFO Best model - Pipeline(steps=[('smote', SMOTE(random_state=42, sampling_strategy='minority')),
                ('standardscaler', StandardScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.01, random_state=100))])

]
[2023-07-25 12:27:26,153] INFO Starting of training logistic regression]
[2023-07-25 12:28:03,859] INFO Test f1 - 0.4680115273775216]
[2023-07-25 12:28:03,859] INFO Test precision - 0.3787313432835821]
[2023-07-25 12:28:03,859] INFO Test recall - 0.6123680241327301]
[2023-07-25 12:28:03,859] INFO Test auc - 0.6636936397942212]
[2023-07-25 12:28:03,865] INFO Best model - Pipeline(steps=[('smote', SMOTE(random_state=42, sampling_strategy='minority')),
                ('standardscaler', StandardScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.01, random_state=100))])

]
[2023-07-25 12:28:16,658] INFO Starting of training random forest]
[2023-07-25 12:32:14,376] INFO Test f1 - 0.5231513476157568]
[2023-07-25 12:32:14,376] INFO Test precision - 0.48278061224489793]
[2023-07-25 12:32:14,376] INFO Test recall - 0.5708898944193062]
[2023-07-25 12:32:14,376] INFO Test auc - 0.6986884217496616]
[2023-07-25 12:32:14,381] INFO Best model - Pipeline(steps=[('smote', SMOTE(random_state=42, sampling_strategy='minority')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.7, max_samples=0.1,
                                        n_estimators=150, n_jobs=-1,
                                        random_state=100))])

]
[2023-07-25 12:47:41,819] INFO Starting of training decision tree]
[2023-07-25 12:49:06,353] INFO Test f1 - 0.471976401179941]
[2023-07-25 12:49:06,353] INFO Test precision - 0.41739130434782606]
[2023-07-25 12:49:06,353] INFO Test recall - 0.5429864253393665]
[2023-07-25 12:49:06,353] INFO Test auc - 0.663983584941827]
[2023-07-25 12:49:06,356] INFO Best model - Pipeline(steps=[('smote', SMOTE(random_state=42, sampling_strategy='minority')),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=10, random_state=100))])

]
[2023-07-25 12:58:43,855] INFO Starting of training xgboost model]
[2023-07-25 13:08:15,631] INFO Starting of training xgboost model]
[2023-07-25 13:09:50,753] INFO Starting of training xgboost model]
[2023-07-25 13:13:26,275] INFO Starting of training xgboost model]
[2023-07-25 13:15:46,484] INFO Test f1 - 0.4829867674858223]
[2023-07-25 13:15:46,485] INFO Test precision - 0.6468354430379747]
[2023-07-25 13:15:46,485] INFO Test recall - 0.385369532428356]
[2023-07-25 13:15:46,485] INFO Test auc - 0.6628388098598776]
[2023-07-25 13:15:46,492] INFO Best model - Pipeline(steps=[('smote', SMOTE(random_state=42, sampling_strategy='minority')),
                ('xgbclassifier',
                 XGBClassifier(base_score=None, booster=None, callbacks=None,
                               colsample_bylevel=None, colsample_bynode=None,
                               colsample_bytree=None,
                               early_stopping_rounds=None,
                               enable_categorical=False, eval_metric=None,
                               feature_types=None, gamma=None, gpu_id=None,
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=5, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, n_estimators=100,
                               n_jobs=-1, num_parallel_tree=None,
                               predictor=None, random_state=100, ...))])

]
[2023-07-25 13:22:13,394] INFO Starting of training logistic regression]
[2023-07-25 13:22:36,962] INFO Test f1 - 0.5314307751639028]
[2023-07-25 13:22:36,962] INFO Test precision - 0.5438042620363063]
[2023-07-25 13:22:36,963] INFO Test recall - 0.5196078431372549]
[2023-07-25 13:22:36,963] INFO Test auc - 0.6979725137808653]
[2023-07-25 13:22:36,967] INFO Best model - Pipeline(steps=[('smote', SMOTE(random_state=42, sampling_strategy='minority')),
                ('standardscaler', StandardScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.01, random_state=100))])

]
[2023-07-25 13:23:53,348] INFO Starting of training logistic regression]
[2023-07-25 13:24:02,611] INFO Starting of training logistic regression]
[2023-07-25 13:24:25,257] INFO Starting of training logistic regression]
[2023-07-25 13:24:57,601] INFO Starting of training random forest]
[2023-07-25 13:28:49,397] INFO Starting of training random forest]
[2023-07-25 13:31:39,988] INFO Starting of training logistic regression]
[2023-07-25 13:32:29,173] INFO Test f1 - 0.4822834645669292]
[2023-07-25 13:32:29,178] INFO Test precision - 0.3579254930606282]
[2023-07-25 13:32:29,178] INFO Test recall - 0.7390648567119156]
[2023-07-25 13:32:29,178] INFO Test auc - 0.6814708108976779]
[2023-07-25 13:32:29,232] INFO Best model - Pipeline(steps=[('smoteenn', SMOTEENN()), ('standardscaler', StandardScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=100))])

]
[2023-07-25 13:32:34,687] INFO Starting of training logistic regression]
[2023-07-25 13:32:47,476] INFO Starting of training logistic regression]
[2023-07-25 13:33:29,944] INFO Starting of training xgboost model]
[2023-07-25 13:35:45,536] INFO Starting of training xgboost model]
[2023-07-25 13:36:03,174] INFO Starting of training decision tree]
[2023-07-25 13:37:54,588] INFO Starting of training random forest]
[2023-07-25 13:39:10,645] INFO Starting of training logistic regression]
